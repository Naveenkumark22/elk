 input
{
	
	jdbc {
           jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
            jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
		   
	           statement => "select interaction_id,contact_id,contact_source,full_name,nag_id,nag_source,nag_org_name,ban,ban_name,ban_source,account_type,transaction_type from mdm_usr.SVW_INTERACTION_INFO order by interaction_id"
		  
		  clean_run=>true
	}		   
	}
	filter
	{
	

mutate {

 add_field => ["id","%{interaction_id}"]
 #add_field => [ "transactionType" ,  "%{transaction_type}"  ]

 }

if [account_type]=="BAN" and [transaction_type]!="MDN"
{
mutate {

  add_field => [ "accountType" ,  "BAN"  ]
add_field => [ "accountId" ,  "%{ban}"  ]

}
}
if [account_type]=="CUSTOMER" and [account_type]!="BAN"
{
mutate {

  add_field => [ "accountType" ,  "CUSTOMER"  ]
add_field => [ "accountId" ,  "%{nag_id}"  ]

}
}


 aggregate {
		task_id => "%{id}"
		code => "		
		map['id'] = event.get('id')
				
#map['transactionType'] = event.get('transactionType')

if (event.get('accountType'))
map['accountType'] = event.get('accountType')
map['accountId'] = event.get('accountId')
end

#contact is mandate
		map['relatedParty'] ||= []
		if (event.get('contact_id') or event.get('full_name'))
		rp =  { 'relatedId' => event.get('contact_id'), 'name' => event.get('full_name'), 'role' => 'User', 'sourceSystem' => event.get('contact_source')}
		rp.delete_if { |k,v| v.nil? }
		if !(map['relatedParty'].include? (rp))
  			 	map['relatedParty'] <<  rp			
 	        end
		end
		
#customerid
		if (event.get('nag_id'))
		rp =  { 'relatedId' => event.get('nag_id'), 'name' => event.get('nag_org_name'), 'role' => 'Customer', 'sourceSystem' => event.get('nag_source')}
		rp.delete_if { |k,v| v.nil? }
		if !(map['relatedParty'].include? (rp))
  			 	map['relatedParty'] <<  rp			
 		end
		end

#ban
		map['relatedEntity'] ||= []
                if (event.get('ban')) 
		rp =  { 'relatedId' => event.get('ban'), 'name' => event.get('ban_name'), 'role' => 'BAN', 'sourceSystem' => event.get('ban_source')}
		rp.delete_if { |k,v| v.nil? }
		if !(map['relatedEntity'].include? (rp))
  			 	map['relatedEntity'] <<  rp			
 		end
		end

	
		event.cancel()
		"

		push_previous_map_as_event => true
		timeout => 5
		timeout_tags => ['aggregated']

	}	



  mutate {
    	    #add_field => [ "load_time", "%{@timestamp}" ]
	   remove_field => ["@timestamp", "@version","interaction_id","interaction_value","contact_id","contact_source","first_name","last_name","fullname","ban","ban_source","ban_name","nag_id","nag_source","nag_org_name","subscription_id","subs_name","subs_source","gk_id","gkorgname","gksourcename"]
	   
	   }
	   }
	   
output {
    #stdout { codec => json_lines }

if[id]
		{
	#efastprod
elasticsearch {
				manage_template => false
				ssl => true
				ssl_certificate_verification => false
				user => ["cpmadmin"]
				password => ["toroCedar982sibuat"]
				index => "vwbbm_mdm116_interaction_detail_uat_v1"
				document_id => "%{id}"
				action => "update"
				doc_as_upsert => "true"
				#document_type => "doc"
				#hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
				hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
				retry_on_conflict => 25000
				}
	}
}