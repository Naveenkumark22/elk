input {

jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
	   statement => "select main_sk as sk_id, secondary_sk, profile_type from mdm_usr.VW_FULL_ELK_EXTERN_SECONDARYSK  where description='SECONDARYSK' order by main_sk"
	   clean_run=>true

	}
jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"

	   statement => "select main_sk as smbsk_id, secondary_sk, profile_type from mdm_usr.VW_FULL_ELK_INTERN_SECONDARYSK  where description='SECONDARYSK' order by main_sk"
 clean_run=>true

	}

}

filter {

if [sk_id] 
	{
	mutate{
	add_field => ["id","%{sk_id}" ]
	#add_field => [ "source_key" ,  "%{sk_id}CPMKEY"  ]
	add_field => ["organizationType","SK External"]
	}
	}
	
	if [smbsk_id] 
	{
	mutate{
	add_field => ["id","%{smbsk_id}" ]
	#add_field => [ "source_key" ,  "%{smbsk_id}CPMKEY"  ]
	add_field => ["organizationType","SK Internal"]
	}
	}


aggregate {
	task_id => "%{id}"
  code => "
  #map['source_key'] = event.get('source_key')
  map['id'] = event.get('id')
 map['organizationType'] = event.get('organizationType')
	
  
    map['secondarySk'] ||= []
		sec = {'id' => event.get('secondary_sk')}
		sec.delete_if { |k,v| v.nil? }
  			if !(map['secondarySk'].include? (sec))
  			 	map['secondarySk'] <<  sec	
				end	
	
	
	event.cancel()
	"
	push_previous_map_as_event => true
	timeout => 3600
	timeout_tags => ['aggregated']
  }
   
	
mutate {
    	    add_field => [ "load_time", "%{@timestamp}" ]
	   remove_field => ["@timestamp", "@version","main_sk","secondary_sk","profile_type","sk_id","tags"]
    }
		

}


output {
    #stdout { codec => json_lines }
	if [organizationType] == "SK External"
		{

	
	elasticsearch {
				manage_template => false
				ssl => true
				ssl_certificate_verification => false
				user => ["cpmadmin"]
				password => ["toroCedar982sibuat"]
				index => "vwbbm_mdm116_sk_external_detail_uat_v1"
				document_id => "%{id}"
				action => "update"
				doc_as_upsert => "true"
				#hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
				hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
				retry_on_conflict => 25000
				}

}
if [organizationType] == "SK Internal"
		{

	
	elasticsearch {
				manage_template => false
				ssl => true
				ssl_certificate_verification => false
				user => ["cpmadmin"]
				password => ["toroCedar982sibuat"]
				index => "vwbbm_mdm116_sk_internal_detail_uat_v1"
				document_id => "%{id}"
				action => "update"
				doc_as_upsert => "true"
				#hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
				hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
				retry_on_conflict => 25000
				}

}

}
