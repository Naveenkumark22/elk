#nohup ./logstash -f /usr/share/logstash/bin/GranularFullLoad/Delta_prod_jobs/logstash_delta_prod_interaction_sync.conf --config.reload.automatic --path.settings /etc/logstash --log.level info --pipeline.batch.size 100  --pipeline.workers 1 --path.logs /usr/share/logstash/bin/logs_delta_interaction_prod --path.data=/usr/share/logstash/data/logstash_delta_prod_interaction_sync  >/dev/null 2>&1 &

input {
  jdbc {
    jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
	 jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
	jdbc_default_timezone => "UTC"
    statement_filepath => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/delta/preparedStatements/logstash_svw_cdc_interaction_prepared_statement.txt"
	prepared_statement_bind_values => [":sql_last_value",":sql_last_value",":sql_last_value",":sql_last_value"]
    prepared_statement_name => "logstash_delta_uat_interaction_svw_cdc_interaction"
    use_prepared_statements => true
    use_column_value => true
	tracking_column => "last_update_dt"
	tracking_column_type => ["timestamp"]
    #schedule => "*/5 * * * *"
      schedule => "/15 * * * * *"
	clean_run => false
	record_last_run => true
  last_run_metadata_path => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/last_run/logstash_interaction"
    #id=>"contact_input_group_query"
  }
  
 jdbc {
    jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
	 jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
	jdbc_default_timezone => "UTC"
    statement_filepath => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/delta/preparedStatements/logstash_svw_cdc_interaction_orgname_prepared_statement.txt"
	prepared_statement_bind_values => [":sql_last_value",":sql_last_value",":sql_last_value"]
    prepared_statement_name => "logstash_delta_uat_interaction_svw_cdc_interaction_orgname"
    use_prepared_statements => true
    use_column_value => true
	tracking_column => "last_update_dt"
	tracking_column_type => ["timestamp"]
    #schedule => "*/5 * * * *"
      schedule => "/15 * * * * *"
	clean_run => false
	record_last_run => true
 last_run_metadata_path => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/last_run/logstash_interaction_orgname" 

    #id=>"contact_input_group_query"
  }
  
  jdbc  {
    jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
	 jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
	jdbc_default_timezone => "UTC"
    statement_filepath => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/delta/preparedStatements/logstash_svw_cdc_interaction_personname_prepared_statement.txt"
	prepared_statement_bind_values => [":sql_last_value",":sql_last_value",":sql_last_value"]
    prepared_statement_name => "logstash_delta_uat_interaction_svw_cdc_interaction_personname"
    use_prepared_statements => true
    use_column_value => true
	tracking_column => "last_update_dt"
	tracking_column_type => ["timestamp"]
    #schedule => "*/5 * * * *"
      schedule => "/15 * * * * *"
	clean_run => false
	record_last_run => true
   last_run_metadata_path => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/last_run/logstash_interaction_personname" 
    #id=>"contact_input_group_query"
  }

jdbc {
			jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
			jdbc_default_timezone => "UTC"
	       statement => "select xpricing_profilepk_id,description,last_update_dt from mdm_usr.svw_cdc_xpricingprofile where last_update_dt > sys_extract_utc(:sql_last_value)"
		    use_column_value => true
			tracking_column => "last_update_dt"
			tracking_column_type => ["timestamp"]
    			schedule => "/1 * * * * *"
			clean_run => false
			record_last_run => true
    last_run_metadata_path => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/last_run/logstash_pricing" 
    }
	jdbc {
			jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
			jdbc_default_timezone => "UTC"
	       statement => "select xpricing_profile_pk_id as xpricing_profilepk_id,last_update_dt,description from mdm_usr.SVW_CDC_XPRICINGPROFILE_ADDR where last_update_dt > sys_extract_utc(:sql_last_value)"
		    use_column_value => true
			tracking_column => "last_update_dt"
			tracking_column_type => ["timestamp"]
    			schedule => "/1 * * * * *"
			clean_run => false
			record_last_run => true
    last_run_metadata_path => "/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/last_run/logstash_pricing_address" 
    }


  	
  }
 filter {
if[interaction_id]
{
 
 jdbc_streaming {
    jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
    statement =>"select interaction_id,to_char(transaction_id) as transid,interaction_cat_type,interaction_type,interaction_type_fren,subject_desc_english,subject_desc_french,interaction_event_status,interactionsource,transaction_type,author,interaction_key,interaction_value,transaction_level_type,account_type,parent_id,document_id,entity_name,interact_pt_tp_name,interact_st_tp_cd,invalid_ind,last_update_tx_id,last_update_user,orginal_language,recorded_user,ref_num,x_communication_id,x_order_id,xversion_number from mdm_usr.SVW_INTERACTION_BASIC where interaction_id=:inter_id "
    parameters => { "inter_id" => "interaction_id"}

    target => "interaction_basic_details"
use_cache => false
  }

if [interaction_source]
{
if[interaction_source] in ["GM-NM1_CONTACT","SSC"]
{
ruby
{
code=>"
event.set('interactionSource',nil)
"
}
}
else
{
mutate
{
add_field => [ "interactionSource" ,  "CPM"  ]
}
}
}
if[end_dt]
{
 mutate{
	add_field => ["interactionEndDateTime","%{end_dt}"]
	add_field => ["recordedDate","%{end_dt}"]
	}
}
if[start_dt]
{
mutate{
	add_field => ["effectiveDate","%{stdate}"]
add_field => ["interactionStartDateTime","%{start_dt}"]
add_field => ["interactionDate","%{start_dt}"]

	}
}
if[original_issue_date]
{
 mutate{
	add_field => ["interactionOriginalIssueDate","%{original_issue_date}"]
	}

}
if[transaction_type]
{
ruby
{
code=>"
if (event.get('end_dt').nil?)
event.set('recordedDate',nil)
event.set('interactionEndDateTime',nil)
end
if (event.get('start_dt').nil?)
event.set('effectiveDate',nil)
event.set('interactionStartDateTime',nil)
event.set('interactionDate',nil)
end
if (event.get('original_issue_date').nil?)
event.set('interactionOriginalIssueDate',nil)
end

"
}
}
if[last_update_dt]
{
 mutate{
	add_field => ["interactionLastUpdateDate","%{last_update_dt}"]
	}
}
if[interaction_id]
{
 mutate{
	add_field => ["id","%{interaction_id}"]
	}
}

   
   jdbc_streaming {
    jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
    statement => "select to_char(interaction_id) as interid,note_desc_english,note_desc_french,author from mdm_usr.SVW_INTERACTION_NOTE_DESC where interaction_id=:inter_id "
   parameters => { "inter_id" => "interaction_id"}

    target => "interaction_note_details"
use_cache => false
  }

# if admin_client_id is service call service address view 
 jdbc_streaming {
   jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
    statement => "select interaction_id,contact_id,contact_source, full_name,nag_id,nag_source,nag_org_name,ban,ban_name,ban_source,account_type,transaction_type from mdm_usr.SVW_INTERACTION_INFO where interaction_id=:inter_id "
   parameters => { "inter_id" => "interaction_id"}

    target => "interaction_related_details"
use_cache => false
  }
}
if "pricing_profile"==[description]
{
jdbc_streaming {
               jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
           statement => "SELECT xpricing_profilepk_id,to_char(xpricing_profilepk_id) as pricing_id,first_name,last_name,to_char(phone_number) as phone_number,mail_id,bell_salesperson_email,customer_price_plan,bellpricing_team_email,pricing_request_extension,appproved_customer_band,to_char(product_type) as product_type,to_char(currency_type) as currency_type,gk_id,customer_id,to_char(extension_phone_number) as extension_phone_number  from mdm_usr.Svw_active_user_xpricing WHERE xpricing_profilepk_id =:prc_id"
	 parameters => { "prc_id" => "xpricing_profilepk_id"}
    target => "pricing_profile_details"
    use_cache => false
 }
jdbc_streaming {
              jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
           statement => "SELECT xpricing_profile_pk_id,address_line_one,city,country,postal_code,province,to_char(nniaddresspk_id) as nniaddresspk_id from mdm_usr.SVW_ACTIVE_USER_XPRICING_ADDR where xpricing_profile_pk_id=:prc_id"
	 parameters => { "prc_id" => "xpricing_profilepk_id"}
    target => "pricing_profile_address_details"
    use_cache => false
 }
mutate
{
add_field => [ "cdc_type_loading" ,  "logstash"  ]
}

 }


     mutate {
	add_field => [ "load_time", "%{@timestamp}" ]
}


if [interaction_id]   { 
# for Gk id we have to polpulate 3 index tmf macro , non tmf macro and gk granual
	clone {
clones => [ "interactionfast" ]

	}
} 

#pricing profile
if "pricing_profile"==[description] and [xpricing_profilepk_id] {
 clone {
	 clones => [ "tmfpricingprofile" ]
       
	 }
	 
}


if( [type]== "interactionfast" and [interaction_id]){
	mutate	{ 
			add_field => { "[@metadata][target_index]" => "vwbbm_mdm116_interaction_detail_uat" } 
			add_field => { "[@metadata][docid]" => "%{interaction_id}" } 	
		}
}
if  ( [type]== "tmfpricingprofile"   ){
	mutate { 
			add_field => { "[@metadata][target_index]" => "vwbbm_mdm116_i_individual_pricing_detail_uat_v1" } 
			add_field => { "[@metadata][docid]" => "%{xpricing_profilepk_id}" }

        }
}


else {
}


  ruby {

 path =>"/opt/IBM/Install/Binaries/logstash/logstash-7.16.2/bin/ssc_interaction/delta/elk_cdc_mapping_ruby_prod.rb"
  } 
 

 mutate {
    	   
	   remove_field => ["@timestamp", "@version","interaction_id","last_update_dt","interaction_basic_details","interaction_note_details","interaction_related_details","start_dt","end_dt","transaction_type","stdate","original_issue_date","interaction_source","pricing_profile_details","pricing_profile_address_details","description"] 
	 }

	 
	}

 
   output {	
 if [@metadata][docid]  
{
if "_jdbcstreamingfailure" not in [tags] and "_rubyexception" not in [tags]
{
		elasticsearch {
		manage_template => false
        ssl => true
        ssl_certificate_verification => false
        user => ["cpmadmin"]
password => ["toroCedar982sibuat"]
		index => "%{[@metadata][target_index]}"
		document_id => "%{[@metadata][docid]}"
		action => "update"
        doc_as_upsert => "true"
		#document_type => "_doc"
   #hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
retry_on_conflict => 25000

		}
}	
}
 

}
