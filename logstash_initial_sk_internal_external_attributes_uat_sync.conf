 input
{
	
	jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"

statement => "select source_id as sk_id,csam_customer_category,url,url_label,misc_description,domain,connect_id,duns_id,wcoc,ref_num,franchise as franchise_flag,type from mdm_usr.vw_sk_external_domain_attr    order by sk_id"
  clean_run=>true
	}
	
	jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
statement => "select child_id as sk_id,profile_type,parent_id,roletp,org_name from mdm_usr.VW_FULL_ELK_SK_EXT_RELATSHIP   order by sk_id"
  clean_run=>true
	}
jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
		               statement => "select source_id as smbsk_id,csam_customer_category,url,url_label,misc_description,domain,connect_id,duns_id,wcoc,ref_num,franchise as franchise_flag,type from mdm_usr.vw_sk_internal_domain_attr    order by smbsk_id"
  clean_run=>true
	}

	jdbc {
            jdbc_driver_library => "/opt/IBM/Install/Binaries/logstash/ojdbc7-12.1.0.2.jar"
           jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
           jdbc_connection_string => "jdbc:oracle:thin:@cwypld-4032.bell.corp.bce.ca:2349/PRCP2"
     jdbc_user => "MDM_LOGSTASH"
    jdbc_password => "LOG_x2r97BQ2"
statement => "select child_id as smbsk_id,profile_type,parent_id,roletp,org_name from mdm_usr.VW_FULL_ELK_SK_INT_RELATSHIP   order by smbsk_id"
  clean_run=>true
	}	
	}
	filter
	{
	  if [sk_id]
   {
mutate {
 
   add_field => ["organizationType","SK External"]
 add_field => [ "id", "%{sk_id}" ]

 }
 if [csam_customer_category]{
 mutate {
 rename => ["csam_customer_category","customerCategory"]
}
}
if [franchise_flag]{
 mutate {
 rename => ["franchise_flag","franchise"]
}
}
if [wcoc]{
 mutate {
  rename => [ "wcoc","wcocFlag" ]
  }
}
  } 
  	 if [smbsk_id]
   {
mutate {
 
   add_field => ["organizationType","SK Internal"]
 add_field => [ "id", "%{smbsk_id}" ]  
 }
 if [csam_customer_category]{
 mutate {
 rename => ["csam_customer_category","customerCategory"]
}
}
if [franchise_flag]{
 mutate {
 rename => ["franchise_flag","franchise"]
}
}

if [wcoc]{
 mutate {
  rename => [ "wcoc","wcocFlag" ]
  }
}

}


  aggregate {
	task_id => "%{id}"
	code => "
	map['id'] = event.get('id')
	map['wcocFlag'] = event.get('wcocFlag')
    map['organizationType'] = event.get('organizationType')
	map['customerCategory'] = event.get('customerCategory')
map['franchise'] = event.get('franchise')


	
    		map['skDomainAttribute'] ||= []
		da = {'attribute' => event.get('domain')}	
                  da.delete_if { |k,v| v.nil? }  -----> check wheteher it is nil or empty   it is like if condition 
               if !(map['skDomainAttribute'].include? (da)) ----> it will check whether it exists or not 
  			 	map['skDomainAttribute'] <<  da	   --? if not it ets added
				end	
				
				
    		map['skURL'] ||= []
		da = {'urlLabel' => event.get('url_label'),'url' => event.get('url'),'description' => event.get('misc_description')}	
		da.delete_if { |k,v| v.nil? }
  			if !(map['skURL'].include? (da))
  			 	map['skURL'] <<  da	
				end
	
          
    		map['skDunsId'] ||= []
		du = {'dunsId' => event.get('duns_id')}	
		du.delete_if { |k,v| v.nil? }
  			if !(map['skDunsId'].include? (du))
  			 	map['skDunsId'] <<  du	
				end	
	
 	
    		map['skConnectId'] ||= []
		co = {'connectId' => event.get('connect_id')}	
		co.delete_if { |k,v| v.nil? }
  			if !(map['skConnectId'].include? (co))
  			 	map['skConnectId'] <<  co	
				end
				
		map['contactMethod'] ||= []
		con = {'contact' => event.get('ref_num'), 'contactType' => event.get('type')}	
		con.delete_if { |k,v| v.nil? }
  			if !(map['contactMethod'].include? (con))
  			 	map['contactMethod'] <<  con			
 			 end
		
			 
		
		map['relatedParty'] ||= []
		rel = {'relatedId' => event.get('parent_id'),  'role' => event.get('roletp'), 'name' => event.get('org_name')}	
		rel.delete_if { |k,v| v.nil? }
  			if !(map['relatedParty'].include? (rel))
  			 	map['relatedParty'] <<  rel	
				end	
			
	
	
	event.cancel()
	"
push_previous_map_as_event => true
	timeout => 3600
	timeout_tags => ['aggregated']
  }

	


  
  mutate {
    	    add_field => [ "load_time", "%{@timestamp}" ]
	   remove_field => ["@timestamp", "@version","domain","source_id","duns_id","type","connect_id","url_label","url","franchise_flag","misc_description","domain","csam_customer_category","wcoc","tags","cont_meth_cat_cd","cont_meth_tp_cd","phone_number","profile_type","parent_id","roletp","org_name","child_id","source_description","ref_num"]
	   
	   }
	   }
	   
output {
    #stdout { codec => json_lines }
	if [organizationType] == "SK External"
		{

	
	elasticsearch {
				manage_template => false
				ssl => true
				ssl_certificate_verification => false
				user => ["cpmadmin"]
				password => ["toroCedar982sibuat"]
				index => "vwbbm_mdm116_sk_external_detail_uat_v1"
				document_id => "%{id}"
				action => "update"
				doc_as_upsert => "true"
				#hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
				hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
				retry_on_conflict => 25000

				}

}
if [organizationType] == "SK Internal"
		{

	
	elasticsearch {
				manage_template => false
				ssl => true
				ssl_certificate_verification => false
				user => ["cpmadmin"]
				password => ["toroCedar982sibuat"]	
			index => "vwbbm_mdm116_sk_internal_detail_uat_v1"
				document_id => "%{id}"
				action => "update"
				doc_as_upsert => "true"
				#hosts => ["https://cpmbbmapp.on.bell.ca:9400"]
				hosts => ["https://cpmbbmapp-uat-on.int.bell.ca:9400"]
				retry_on_conflict => 25000
				}

}

}
